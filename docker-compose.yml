services:
  nginx:
    container_name: nginx_${COMPOSE_PROJECT_NAME}
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./html:/var/www/html:cached
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - php

  php:
    container_name: php_${COMPOSE_PROJECT_NAME}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    volumes:
      - ./html:/var/www/html
    working_dir: /var/www/html
    environment:
      - DB_HOST=${MYSQL_HOSTNAME}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
    command: >
      sh -c "
      mkdir -p storage/logs bootstrap/cache &&
      chown -R www-data:www-data storage bootstrap/cache &&
      chmod -R 775 storage bootstrap/cache &&
      composer install --no-interaction --no-dev --optimize-autoloader &&
      php artisan storage:link &&
      php-fpm7.2 -F
      "

  mysql:
    container_name: mysql_${COMPOSE_PROJECT_NAME}
    image: mysql:5.7
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: Asia/Seoul
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # node:
  #   container_name: node_${COMPOSE_PROJECT_NAME}
  #   image: node:18
  #   volumes:
  #     - ./html:/var/www/html
  #   working_dir: /var/www/html
  #   tty: true
  #   stdin_open: true
  #   command: >
  #     sh -c "
  #       rm -rf node_modules package-lock.json &&
  #       npm install -g cross-env webpack webpack-cli laravel-mix &&
  #       npm install cross-env camelcase webpack webpack-cli laravel-mix --save-dev &&
  #       npm install &&
  #       npm audit fix --force &&
  #       npm run watch
  #     "